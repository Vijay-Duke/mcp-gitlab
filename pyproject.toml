[project]
name = "mcp-gitlab"
version = "0.1.0"
description = "MCP server for GitLab integration - AI-powered GitLab operations"
readme = "README.md"
license = {text = "Apache-2.0"}
requires-python = ">=3.10"
authors = [
    {name = "Vijay Duke", email = ""},
]
keywords = [
    "mcp",
    "gitlab",
    "api",
    "automation",
    "ai",
    "model-context-protocol",
    "devops",
    "git",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Version Control :: Git",
    "Topic :: System :: Software Distribution",
]
dependencies = [
    "mcp>=0.1.0",
    "python-gitlab>=4.0.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "python-json-logger>=2.0.0",
    "tomli>=2.0.0; python_version<'3.11'",
]

[project.urls]
Homepage = "https://github.com/Vijay-Duke/mcp-gitlab"
Documentation = "https://mcp-gitlab.readthedocs.io/"
Repository = "https://github.com/Vijay-Duke/mcp-gitlab.git"
Issues = "https://github.com/Vijay-Duke/mcp-gitlab/issues"
Changelog = "https://github.com/Vijay-Duke/mcp-gitlab/blob/main/CHANGELOG.md"

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
]
dev = [
    "ruff>=0.1.0",
    "black>=23.0.0",
    "mypy>=1.0.0",
    "isort>=5.0.0",
    "pre-commit>=3.0.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=2.0.0",
    "sphinx-autodoc-typehints>=2.0.0",
    "sphinx-copybutton>=0.5.0",
    "myst-parser>=2.0.0",
    "sphinxcontrib-mermaid>=0.9.0",
    "sphinx-tabs>=3.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.scripts]
mcp-gitlab = "mcp_gitlab.__main__:main"

[tool.black]
line-length = 120
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.isort]
profile = "black"
line_length = 120
known_first_party = ["mcp_gitlab"]
skip_gitignore = true

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_any_unimported = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.coverage.run]
source = ["src/mcp_gitlab"]
omit = ["*/tests/*", "*/__main__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]